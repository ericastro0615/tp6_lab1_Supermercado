/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tp6_superdetodo_lab1.vistas;

import javax.swing.JOptionPane;
import tp6_superdetodo_lab1.entidades.Producto;


/**
 *
 * @author Usuario
 */
public class gestionProductosGral extends javax.swing.JInternalFrame {

    /**
     * Creates new form gestionProductos
     */
    public gestionProductosGral() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox_Rubro = new javax.swing.JComboBox<>();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        jLabel1_gestionProd = new javax.swing.JLabel();
        jLabel2_nombre = new javax.swing.JLabel();
        jLabel2_cod = new javax.swing.JLabel();
        jLabel2_precio = new javax.swing.JLabel();
        jLabel2_stock = new javax.swing.JLabel();
        jLabel2_cat = new javax.swing.JLabel();
        jTextField1_prod = new javax.swing.JTextField();
        jTextField1_cod = new javax.swing.JTextField();
        jTextField1_precio = new javax.swing.JTextField();
        jTextField1_stock = new javax.swing.JTextField();

        setClosable(true);

        jComboBox_Rubro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Elija una opcion", "COMESTIBLE", "LIMPIEZA", "PERFUMERIA" }));

        btnNuevo.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(0, 0, 255));
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(0, 0, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setForeground(new java.awt.Color(0, 0, 255));
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        jLabel1_gestionProd.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1_gestionProd.setText("Gestión de productos");

        jLabel2_nombre.setText("Nombre:");

        jLabel2_cod.setText("Código:");

        jLabel2_precio.setText("Precio:");

        jLabel2_stock.setText("Stock:");

        jLabel2_cat.setText("Categoria:");

        jTextField1_prod.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextField1_prod.setText(" ");

        jTextField1_cod.setText(" ");

        jTextField1_precio.setText(" ");

        jTextField1_stock.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2_cod)
                                    .addComponent(jLabel2_precio)
                                    .addComponent(jLabel2_stock)
                                    .addComponent(jLabel2_cat)
                                    .addComponent(jLabel2_nombre))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1_cod)
                                    .addComponent(jTextField1_precio)
                                    .addComponent(jTextField1_stock)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox_Rubro, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1_gestionProd, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addComponent(btBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 80, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSalir)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnGuardar)
                                .addGap(36, 36, 36)
                                .addComponent(btnEliminar)))))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1_gestionProd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jLabel2_nombre)
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2_cod)
                            .addComponent(jTextField1_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2_precio)
                    .addComponent(jTextField1_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2_cat)
                    .addComponent(jComboBox_Rubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2_stock)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar)
                    .addComponent(btnNuevo))
                .addGap(10, 10, 10)
                .addComponent(btnSalir)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        try {
            int cont = 0;
            int codigo = Integer.parseInt(jt_Codigo.getText().trim());
            //Traigo el codigo capturado en el boton buscar, para que antes de presionar 
            //Guardar, no cambien el codigo y modifiquen otro producto...
            Supermercado.codigoBuscado = codigo;
            for (Producto prod : Menu.listaProductos) {
                if (prod.getCodigo() == codigo) {
                    jtDescripcion.setText(prod.getDescripcion());
                    //paso precio a string para setearlo en el jtPrecio:
                    String precioString = Double.toString(prod.getPrecio());
                    jtPrecio.setText(precioString);
                    String rubroString = prod.getRubro().toString();
                    jComboBox_Rubro.setSelectedItem(rubroString);
                    //paso el stock de int a string para setText
                    String stockString = Integer.toString(prod.getStock());
                    jtStock.setText(stockString);
                    cont = cont - 1;
                }
                cont = cont + 1;
                if (Menu.listaProductos.size() == cont) {
                    borrarCampos();
                    JOptionPane.showMessageDialog(this, "El codigo: " + codigo + " NO existe, puede registrar un producto con el codigo ingresado ");
                }
            }

        } catch (NumberFormatException nfe) {
            borrarCampos();
            JOptionPane.showMessageDialog(this, "Ingrese un numero en el código, para realizar la busqueda del producto");
        }
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        try {
            int codigo = Integer.parseInt(jt_Codigo.getText().trim());
            // el producto se va agregar solo si el codigo no existe y todos los datos estan completos. 
            boolean existe = false;
            for (Producto prod : Menu.listaProductos) {
                if (prod.getCodigo() == codigo) {
                    jt_Codigo.setText("");
                    existe = true;
                    JOptionPane.showMessageDialog(this, "Producto Existente: el código ya esta registrado\n"
                            + "Puede ingresar el código y modificar los datos del producto");
                }
            }
            //capturo los campos de texto en variables con el tipo de dato parseado:
            String descripcion = jtDescripcion.getText().trim();
            Double precio = Double.parseDouble(jtPrecio.getText().trim());
            int stock = Integer.parseInt(jtStock.getText().trim());
            String categoria = jComboBox_Rubro.getSelectedItem().toString();

            if (categoria.equals("- Elija una opcion")) {
                JOptionPane.showMessageDialog(this, "Seleccione un Rubro por favor...");
            }
            if (existe == false) {
                listaProductos.add(new Producto(codigo, descripcion, precio, stock, Categoria.valueOf(categoria)));
                JOptionPane.showMessageDialog(this, "¡ Producto Agregado !");
            }

        } catch (NumberFormatException nfe) {
            //si hay datos vacios o datos incorrectos , mostrara un cartel.
            jt_Codigo.setText("");
            JOptionPane.showMessageDialog(this, "Datos incorrectos o vacios, verifique los datos ingresados");

        }
        borrarCampos();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            boolean datosOk = true;
            int codigo = Integer.parseInt(jt_Codigo.getText().trim());
            if (codigo!= Menu.codigoBuscado){
                datosOk=false;
            }
            if (jtDescripcion.getText().trim().equals("") || jtPrecio.getText().trim().equals("") || jtStock.getText().trim().equals("") || jtStock.getText().trim().equals("")) {
                datosOk = false;
                JOptionPane.showMessageDialog(this, "Datos vacios, ingrese todos los datos...");
            }
            // el producto se va a modificar solo si el codigo existe y todos los datos estan completos. 
            for (Producto prod : Menu.listaProductos) {
                if (prod.getCodigo() == codigo && datosOk == true) {
                    //capturo los campos de texto en variables con el tipo de dato parseado:
                    String descripcion = jtDescripcion.getText().trim();
                    Double precio = Double.parseDouble(jtPrecio.getText().trim());
                    int stock = Integer.parseInt(jtStock.getText().trim());
                    String categoria = jComboBox_Rubro.getSelectedItem().toString();

                    if (categoria.equals("- Elija una opcion")) {
                        JOptionPane.showMessageDialog(this, "Seleccione un Rubro por favor...");
                    } else {
                        prod.setDescripcion(descripcion);
                        prod.setPrecio(precio);
                        prod.setStock(stock);
                        if (categoria.equalsIgnoreCase("PERFUMERIA")) {
                            prod.setRubro(Categoria.PERFUMERIA);
                        }
                        if (categoria.equalsIgnoreCase("COMESTIBLE")) {
                            prod.setRubro(Categoria.COMESTIBLE);
                        }
                        if (categoria.equalsIgnoreCase("LIMPIEZA")) {
                            prod.setRubro(Categoria.LIMPIEZA);
                        }
                        JOptionPane.showMessageDialog(this, "Cambios Guardados !");
                    }
                }
            }
            String categoria = jComboBox_Rubro.getSelectedItem().toString();
            if (categoria.equals("- Elija una opcion")) {
                JOptionPane.showMessageDialog(this, "Elija una categoria del producto a buscar");
            }
        } catch (NumberFormatException e) {
            jt_Codigo.setText("");
            JOptionPane.showMessageDialog(this, "Datos incorrectos. Ingrese un número");
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Error, debe completar los campos");
        }
        borrarLista();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        boolean eliminar = false;
        try {
            int codigo = Integer.parseInt(jTextField1_cod.getText().trim());
            //busco el producto por el codigo para eliminarlo
            for (Producto aux : Supermercado.listaDeProductos ) {
                if (aux.getCodigo() == codigo) {
                    eliminar = true;
                    break;
                }
            }
            if (eliminar == true) {
                Menu.listaProductos.removeIf(prod -> prod.getCodigo() == codigo);
                JOptionPane.showMessageDialog(this, "Producto eliminado");
            } else {
                JOptionPane.showMessageDialog(this, "Producto no encontrado");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese el codigo del producto que desea eliminar");
        }
        borrarLista();


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        //Ocultamos gestion de productos:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> jComboBox_Rubro;
    private javax.swing.JLabel jLabel1_gestionProd;
    private javax.swing.JLabel jLabel2_cat;
    private javax.swing.JLabel jLabel2_cod;
    private javax.swing.JLabel jLabel2_nombre;
    private javax.swing.JLabel jLabel2_precio;
    private javax.swing.JLabel jLabel2_stock;
    private javax.swing.JTextField jTextField1_cod;
    private javax.swing.JTextField jTextField1_precio;
    private javax.swing.JTextField jTextField1_prod;
    private javax.swing.JTextField jTextField1_stock;
    // End of variables declaration//GEN-END:variables
    private void borrarLista() {
        jt_Codigo.setText("");
        jtDescripcion.setText("");
        jtPrecio.setText("");
        jtStock.setText("");
        jComboBox_Rubro.setSelectedIndex(0);
    }
}

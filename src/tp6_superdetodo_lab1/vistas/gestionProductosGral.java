/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tp6_superdetodo_lab1.vistas;

import javax.swing.JOptionPane;
import tp6_superdetodo_lab1.entidades.EnumCategoria;
import tp6_superdetodo_lab1.entidades.Producto;
import static tp6_superdetodo_lab1.vistas.Supermercado.listaDeProductos;


/**
 *
 * @author Usuario
 */
public class gestionProductosGral extends javax.swing.JInternalFrame {

    /**
     * Creates new form gestionProductos
     */
    public gestionProductosGral() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox_Rubro = new javax.swing.JComboBox<>();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        jLabel1_gestionProd = new javax.swing.JLabel();
        jLabel2_nombre = new javax.swing.JLabel();
        jLabel2_cod = new javax.swing.JLabel();
        jLabel2_precio = new javax.swing.JLabel();
        jLabel2_stock = new javax.swing.JLabel();
        jLabel2_cat = new javax.swing.JLabel();
        jTextField1_prod = new javax.swing.JTextField();
        jTextField1_cod = new javax.swing.JTextField();
        jTextField1_precio = new javax.swing.JTextField();
        jTextField1_stock = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_tablaGralGestionProd = new javax.swing.JTable();

        setClosable(true);

        jComboBox_Rubro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Elija una opcion", "ALIMENTOS", "LIMPIEZA", "PERFUMERIA" }));

        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setForeground(new java.awt.Color(255, 0, 51));
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        jLabel1_gestionProd.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1_gestionProd.setText("Gestión de productos");

        jLabel2_nombre.setText("Nombre:");

        jLabel2_cod.setText("Código:");

        jLabel2_precio.setText("Precio:");

        jLabel2_stock.setText("Stock:");

        jLabel2_cat.setText("Categoria:");

        jTextField1_prod.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextField1_prod.setText(" ");

        jTextField1_cod.setText(" ");

        jTextField1_precio.setText(" ");

        jTextField1_stock.setText(" ");

        jTable_tablaGralGestionProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable_tablaGralGestionProd);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSalir))
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLabel1_gestionProd, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2_cod)
                                    .addComponent(jLabel2_precio)
                                    .addComponent(jLabel2_stock)
                                    .addComponent(jLabel2_cat)
                                    .addComponent(jLabel2_nombre))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1_cod)
                                            .addComponent(jTextField1_precio)
                                            .addComponent(jTextField1_stock)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextField1_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(1, 1, 1)
                                        .addComponent(btBuscar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox_Rubro, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(btnGuardar)
                                .addGap(54, 54, 54)
                                .addComponent(btnEliminar)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1_gestionProd)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2_nombre)
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2_cod)
                            .addComponent(jTextField1_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2_precio)
                    .addComponent(jTextField1_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2_cat)
                    .addComponent(jComboBox_Rubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2_stock))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar)
                    .addComponent(btnNuevo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnSalir))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        try {
            int cont = 0;
            int codigo = Integer.parseInt(jTextField1_cod.getText().trim());
            //falta filtrar cpd ya ingresados
            for (Producto aux : Supermercado.listaDeProductos) {
                if (aux.getCodigo() == codigo) {
                    jTextField1_prod.setText(aux.getDescripcion());
                    String precioString = Double.toString(aux.getPrecio());
                    jTextField1_precio.setText(precioString);
                    String rubroString = aux.getCategoria().toString();
                    jComboBox_Rubro.setSelectedItem(rubroString);
                    String stockString = Integer.toString(aux.getStock());
                    jTextField1_stock.setText(stockString);
                    cont = cont - 1;
                }
                cont = cont + 1;
                if (Supermercado.listaDeProductos.size() == cont) {
                    borrarLista();
                    JOptionPane.showMessageDialog(this, "El codigo ingresado, no se encuentra");
                }
            }

        } catch (NumberFormatException e) { 
            JOptionPane.showMessageDialog(this, "Ingrese un número válido");
            borrarLista();
        }
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        try {
            int codigo = Integer.parseInt(jTextField1_precio.getText().trim());
            // el producto se va agregar solo si el codigo no existe y todos los datos estan completos. 
            boolean existe = false;
            for (Producto aux : Supermercado.listaDeProductos) {
                if (aux.getCodigo() == codigo) {
                    jTextField1_cod.setText("");
                    JOptionPane.showMessageDialog(this, "Error, el código ya esta registrado" );
                }
            }
            //capturo los campos de texto en variables con el tipo de dato parseado:
            String nombre = jTextField1_prod.getText().trim();
            Double precio = Double.parseDouble(jTextField1_precio.getText().trim());
            int stock = Integer.parseInt(jTextField1_stock.getText().trim());
            String categoria = jComboBox_Rubro.getSelectedItem().toString();

            if (categoria.equals("- Elija una opcion")) {
                JOptionPane.showMessageDialog(this, "Categorias de productos:");
            }
            if (existe == false) {
                listaDeProductos.add(new Producto(nombre, codigo, precio, stock,  EnumCategoria.valueOf(categoria)));
                JOptionPane.showMessageDialog(this, "Producto agregado correctamente");
            }
        } catch (NumberFormatException e) {
            jTextField1_cod.setText("");
            JOptionPane.showMessageDialog(this, "Datos incorrectos, ingrese un número válido");

        }
        borrarLista();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
         
            int codigo = Integer.parseInt(jTextField1_cod.getText().trim());
           
            
            if (jTextField1_prod.getText().trim().equals("") || jTextField1_precio.getText().trim().equals("") || jTextField1_stock.getText().trim().equals("") || jTextField1_cod.getText().trim().equals("")) {
                
                JOptionPane.showMessageDialog(this, "Campos vacios. Reintente nuevamente");
            }
           
            for (Producto aux : Supermercado.listaDeProductos ) {
                if (aux.getCodigo() == codigo ) {
                    //capturo los campos de texto en variables con el tipo de dato parseado:
                    String descripcion = jTextField1_prod.getText().trim();
                    Double precio = Double.parseDouble(jTextField1_precio.getText().trim());
                    int stock = Integer.parseInt(jTextField1_stock.getText().trim());
                    String categoria = jComboBox_Rubro.getSelectedItem().toString();

                    if (categoria.equals("- Elija una opcion")) {
                        JOptionPane.showMessageDialog(this, "Seleccione un Rubro por favor...");
                    } else {
                        aux.setDescripcion(descripcion);
                        aux.setPrecio(precio);
                        aux.setStock(stock);
                        if (categoria.equalsIgnoreCase("PERFUMERIA")) {
                            aux.setCategoria(EnumCategoria.PERFUMERIA);
                        }
                        if (categoria.equalsIgnoreCase("ALIMENTOS")) {
                            aux.setCategoria(EnumCategoria.COMESTIBLE);
                        }
                        if (categoria.equalsIgnoreCase("LIMPIEZA")) {
                            aux.setCategoria(EnumCategoria.LIMPIEZA);
                        }
                        JOptionPane.showMessageDialog(this, "Datos modificados, exitosamente");
                    }
                }
            }
            String categoria = jComboBox_Rubro.getSelectedItem().toString();
            if (categoria.equals("- Elija una opcion")) {
                JOptionPane.showMessageDialog(this, "Elija una categoria del producto a buscar");
            }
        } catch (NumberFormatException e) {
            jTextField1_stock.setText("");
            JOptionPane.showMessageDialog(this, "Datos incorrectos. Ingrese un número");
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Error, debe completar los campos");
        }
        borrarLista();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        boolean eliminar = false;
        try {
            int codigo = Integer.parseInt(jTextField1_cod.getText().trim());
            //busco el producto por el codigo para eliminarlo
            for (Producto aux : Supermercado.listaDeProductos ) {
                if (aux.getCodigo() == codigo) {
                    eliminar = true;
                    break;
                }
            }
            if (eliminar == true) {
                Supermercado.listaDeProductos.removeIf(prod -> prod.getCodigo() == codigo);
                JOptionPane.showMessageDialog(this, "Producto eliminado");
            } else {
                JOptionPane.showMessageDialog(this, "Producto no encontrado");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese el codigo del producto que desea eliminar");
        }
        borrarLista();


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        //Ocultamos gestion de productos:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> jComboBox_Rubro;
    private javax.swing.JLabel jLabel1_gestionProd;
    private javax.swing.JLabel jLabel2_cat;
    private javax.swing.JLabel jLabel2_cod;
    private javax.swing.JLabel jLabel2_nombre;
    private javax.swing.JLabel jLabel2_precio;
    private javax.swing.JLabel jLabel2_stock;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_tablaGralGestionProd;
    private javax.swing.JTextField jTextField1_cod;
    private javax.swing.JTextField jTextField1_precio;
    private javax.swing.JTextField jTextField1_prod;
    private javax.swing.JTextField jTextField1_stock;
    // End of variables declaration//GEN-END:variables
    private void borrarLista() {
        jTextField1_cod.setText("");
        jTextField1_precio.setText("");
        jTextField1_prod.setText("");
        jTextField1_stock.setText("");
        jComboBox_Rubro.setSelectedIndex(0);
    }
}
